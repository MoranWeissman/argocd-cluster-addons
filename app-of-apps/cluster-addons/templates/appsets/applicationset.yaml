{{- range $index, $applicationSet := .Values.applicationsets }}
{{- range $i, $environment := $applicationSet.environments }}
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: {{ $applicationSet.appName }}-{{ $environment.env }}
  namespace: argocd
spec:
  clusterResourceBlacklist:
  - group: ""
    kind: ""
  - group: ""
    kind: ""
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
---
{{- end }}
{{- end }}

{{- range $index, $appset := .Values.applicationsets }}
{{- range $i, $environment := $appset.environments }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ $appset.appName }}-{{ $environment.env }}
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=zero"]
  generators:
    - clusters:
        selector:
          matchLabels:
            argocd.argoproj.io/secret-type: cluster                  
            env: '{{ $environment.env }}'
            {{ $appset.appName }}: enabled
        values:
          revision: '{{ $environment.version }}'
          app: '{{ $appset.appName }}'
  template:
    metadata:
      name: '{{ $appset.appName }}-{{`{{.name}}`}}'
      finalizers:
        - resources-finalizer.argocd.argoproj.io      
    spec:
      project: {{ $appset.appName }}-{{ $environment.env }}
      sources:
        - repoURL: {{ $appset.repoURL }}
          targetRevision: '{{`{{default .values.revision (index .metadata.labels (print .values.app "-version"))}}`}}'
          chart: {{ $appset.chart }}
          helm:
            valueFiles:
            - '$values/values/addons-config/overrides/{{`{{.name}}`}}/{{ $appset.appName }}.yaml'
            valuesObject:
              {{- with index $.Values.addonsConfig.default $appset.appName }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
            {{ if eq $appset.appName "datadog" }}
            parameters:
              - name: 'datadog.apiKeyExistingSecret'
                value: '{{`{{.name}}`}}'
              - name: 'datadog.clusterName'
                value: '{{`{{.name}}`}}'
              - name: 'datadog.env[0].name'
                value: DD_ENV
              - name: 'datadog.env[0].value'
                value: {{ $environment.env }}
            {{ end }}
        - repoURL: {{ $.Values.repoURL }}
          targetRevision: HEAD
          ref: values
      destination:
        server: '{{`{{.server}}`}}'
        namespace: {{ $appset.appName }}
      syncPolicy:  
        automated:
          prune: true
        syncOptions:
        - CreateNamespace=true
      {{- with $appset.ignoreDifferences }}
      ignoreDifferences:
      {{- toYaml . | nindent 8 }}
      {{- end }}        
---
{{- end }}
{{- end }}